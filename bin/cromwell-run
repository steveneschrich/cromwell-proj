#!/bin/sh
#
# This script only executes the 'cromwell run' command with all options
# turned on.
DEBUG=1

if [ ! -f ".cromwell-proj-root" ]; then
    echo "Not in cromwell project root, not continuing"
    exit 1
fi
JAVA=$(which java)
if [ -z "$JAVA" ]; then
    echo "Cannot find a usable java, please install."
    exit 1
fi

CROMWELL=$(ls lib/cromwell-*.jar | tail -1)
if [ -z "$CROMWELL" ]; then
    echo "cromwell jar file not installed in lib, run bin/cromwell-update"
    exit 1
fi
if [ $DEBUG == 1 ]; then
    echo "Using cromwell $CROMWELL"
fi

# Generate json includes from yml input
bin/make-cache conf/*.yml


# Manage conf files in wf specifically
WF=$(basename $1 .wdl)
if [ -s wf/$WF.yml ]; then
    echo "Using workflow inputs wf/$WF.yml."
    bin/make-cache wf/$WF.yml
    INPUTS_JSON="--inputs wf/cache/${WF}.json"
else
    INPUTS_JSON=""
fi

WFOPTS="workflow-options"
if [ -s conf/${WFOPTS}.yml ]; then
    echo "Using workflow options file conf/${WFOPTS}.yml."
    bin/make-cache conf/$WFOPTS.yml
    WORKFLOW_OPTIONS="--options conf/cache/${WFOPTS}.json"
else
    WORKFLOW_OPTIONS=""
fi


# Now we can execute cromwell with all default options included for configuration.
#
# LOG_LEVEL: TRACE, DEBUG, INFO, WARN, ERROR, or OFF. (default is INFO).
# LOG_MODE: pretty, standard. (default is pretty for cromwell run, standard for cromwell server).
#
# Some notes on setting this log level. If this is set, it seems to override almost anything else
# that can be set (cromwell.conf, etc). 
# I was not able to determine how to disable hsqldb logging.
CMD="${JAVA} \
	-DLOG_LEVEL=INFO -DLOG_MODE=standard \
	-Dconfig.file=conf/system/cromwell.conf \
    -Dhsqldb.reconfig_logging=false \
    -Dhsqldb.applog=0 -Dhsqldb.sqlog=0 \
	-jar ${CROMWELL} \
	run \
    $INPUTS_JSON \
  	$WORKFLOW_OPTIONS \
	$@"

echo $CMD
$CMD
